apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'io.fabric'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
ext.artifactId = 'zxing-android-embedded'
//apply plugin: 'checkstyle'
//apply from: '../config/android-common.gradle'
//apply from: '../config/keystore.gradle'

dependencies {
    api project.zxingCore
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13'
    testImplementation "org.mockito:mockito-core:1.9.5"
}
android {
    compileSdkVersion 30
    //buildToolsVersion "29.0.3"
    buildToolsVersion "30.0.2"
    // useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.pqiorg.multitracker"
        minSdkVersion 26
        targetSdkVersion 30

        versionCode 9
        versionName "1.5"

//      versionCode 9006
//      versionName "20March2021"
      //  useLibrary 'org.apache.http.legacy'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a", "x86","x86_64","arm64-v8a"
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            ext.enableCrashlytics = false
            debuggable true
        }
        release {
            minifyEnabled false //if true , Drive api will not work in release apk
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
            /* signingConfig signingConfigs.config
            zipAlignEnabled true*/
        }
        innerTest {

            matchingFallbacks = ['debug', 'release']
        }
    }


  /*  sourceSets {
        main.jniLibs.srcDirs = ['libs']
    }*/

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
     //   exclude '/lib/mips64/**'
      //  exclude '/lib/arm64-v8a/**'
      //  exclude '/lib/x86_64/**'
      //  exclude '/lib/armabi/**'
      //  exclude '/lib/mips/**'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

}

dependencies {
    //define versions
    def work_version = "2.5.0"
    def room_version = "1.1.1"

    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
  //  implementation fileTree(dir: 'libs', include: ['*.jar', '*.so'])
      implementation fileTree(include: ['*.jar'], dir: 'libs')

    //implementation fileTree(dir: "$buildDir/native-libs", include: 'native-libs.jar')


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    // implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'com.google.firebase:firebase-functions:19.1.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.facebook.android:facebook-android-sdk:5.15.3'
    implementation 'com.google.firebase:firebase-config:19.1.4'
    implementation 'com.rabbitmq:amqp-client:5.9.0'
    //noinspection DuplicatePlatformClasses
   // implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.6'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    implementation group: 'com.github.chrisbanes.photoview', name: 'library', version: '1.2.4'
    implementation 'com.google.android.gms:play-services-auth:18.0.0'
    implementation "com.google.android.gms:play-services-base:17.2.1"
    implementation "com.google.android.gms:play-services-games:19.0.0"
    implementation 'com.google.android.gms:play-services-plus:17.0.0'

    implementation 'com.mani:ThinDownloadManager:1.4.0'

    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'
    implementation 'com.google.firebase:firebase-analytics:17.6.0'

    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    implementation project(':zxing-android-embedded')
    implementation(project(':gdriverest')) {
        transitive = true
    }
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'org.altbeacon:android-beacon-library:2.17'
    //implementation 'com.android.support:localbroadcastmanager:28.0.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation "com.google.android.gms:play-services-drive:$playServicesVersion"
    // Required for authentication of account.
    implementation "com.google.android.gms:play-services-auth:$playServicesVersion"
    implementation('com.google.api-client:google-api-client-android:1.23.0') {
       // exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-sheets:v4-rev505-1.23.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    // Adding RxJava2 support
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation 'pub.devrel:easypermissions:0.3.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.8'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.8'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    implementation group: 'org.apache.poi', name: 'poi', version: '4.1.2'
    implementation 'androidx.preference:preference:1.1.1'


    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.2'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.0'
    implementation project(':library')
    implementation "joda-time:joda-time:${project.jodaVersion}"
    implementation 'com.google.guava:guava:27.0.1-android'

    //room
    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"
    testImplementation "android.arch.persistence.room:testing:$room_version"

    //work manager (Java only)
    implementation "androidx.work:work-runtime:$work_version"

}
//task copyNativeLibs(type: Copy) {
//    from(new File(getProjectDir(), 'src/main/jniLibs')) { include '**/*.so' }
//    into new File(buildDir, 'jniLibs')
//}
//
//tasks.withType(org.gradle.api.tasks.compile.JavaCompile) {
//    compileTask -> compileTask.dependsOn copyNativeLibs
//}
//
//clean.dependsOn 'cleanCopyNativeLibs'


//task nativeLibsToJar(type: Jar, description: 'create a jar archive of the native libs') {
//    destinationDir file("$buildDir/native-libs")
//    baseName 'native-libs'
//    from fileTree(dir: 'libs', include: '**/*.so')
//    into 'lib/'
//}
//
//tasks.withType(JavaCompile) {
//    compileTask -> compileTask.dependsOn(nativeLibsToJar)
//}

//task copyJniLibs(type: Copy) {
//    from 'libs/armeabi'
//    into 'src/main/jniLibs/armeabi'
//}
//tasks.withType(JavaCompile) {
//    compileTask -> compileTask.dependsOn(copyJniLibs)
//}
//clean.dependsOn 'cleanCopyJniLibs'
//
//task nativeLibsToJar(type: Jar, description: 'create a jar archive of the native libs') {
//    destinationDir file("$buildDir/native-libs")
//    baseName 'native-libs'
//    from fileTree(dir: 'libs', include: '**/*.so')
//    into 'lib/'
//}
//
//tasks.withType(JavaCompile) {
//    compileTask -> compileTask.dependsOn(nativeLibsToJar)
//}
//apply from: '../config/style.gradle'